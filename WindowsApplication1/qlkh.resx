<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jbgEJv8CFCWQvcuCQG4AAAAASUVORK5CYII=
</value>
  </data>
</root>